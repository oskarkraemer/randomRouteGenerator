from randomRouteGenerator.route_generator import RouteGenerator
from randomRouteGenerator.coordinate import Coordinate

def __generate():
    generator = RouteGenerator()

    #Manually set the openrouteservice API key
    generator.api_key = ""

    #OR read the API key from a file
    #generator.read_api_key("ors_api.key")

    #What type of route generation should be used? (See README)
    generator.routing_profile = "cycling-road"

    #How many random points should be generated?"
    generator.point_amount = 4

    #How should the origin and end point be handled (See RouteGenerator.ROUTE_MODE)?
    generator.route_mode = generator.ROUTE_MODE.START_END_ORIGIN

    #Which features should be avoided in the route?
    generator.avoids = ["ferries", "steps"]

    #Generate the route with the given origin point and maximum length
    p = generator.generate_route(Coordinate(51.846812, 6.242033), 40000)

    print("Generated route:")
    
    #Print all routing points (all points generated by the routing)
    for x in p.routing_points:
        print(x)

    #Print all way-points (ONLY the random points whose amount is specified in generator.point_amount)
    print("\nWaypoints:")

    for x in p.points:
        print(x)
    
    print(f"Length: {p.get_length()} | Duration: {p.get_duration()} | Elevation: {p.get_elevation()}")

    #Retrieve information about the road-types in the route
    print(p.get_way_info())

    #Generate a GPX file containing the route
    p.generate_gpx_file(filename="out.gpx")

__generate()